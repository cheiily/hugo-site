<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>root on chiihou</title>
    <link>/</link>
    <description>Recent content in root on chiihou</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>chiihou</title>
      <link>/projects/chiihou/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/chiihou/</guid>
      <description>/links this website https://github.com/cheiily/hugo-site /motivation An idea of a personal landing/resume website has been going around my head for a while but the final push was seeing a befriended developer&amp;rsquo;s small, personal blog built with Hugo. This introduced me to the whole concept of static website generators. As a form of procrastination from uni work, first came the website&amp;rsquo;s layout and much later the content.&#xA;/technologies Hugo VPS /implementation Hugo utilizes Go templates for (partial) layout specifications and allows for easy import of pre-defined themes.</description>
    </item>
    <item>
      <title>dustgrain</title>
      <link>/projects/dustgrain/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/dustgrain/</guid>
      <description>/links https://github.com/cheiily/DustGrain /motivation While hanging around the FGC and then developing HeartBlazer, I&amp;rsquo;ve always been thinking how cool it would be to have a quick reference lookup whenever I wanted to check some frame data or the like. The caveat was that there was no decent tool available out there. I&amp;rsquo;ve also been looking at writing some basic project to kickstart the kotlin learning.&#xA;So I took the opportunity that Java interoperates with Kotlin, and decided to make one myself.</description>
    </item>
    <item>
      <title>heartblazer</title>
      <link>/projects/heartblazer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/heartblazer/</guid>
      <description>-&amp;gt; Minimal discord chatbot application providing utility for a local FGC server. -&amp;gt; Built with the JDA5 discord API wrapper. -&amp;gt; Allows pin-management for thread-owners within event- and advice-forums. -&amp;gt; Integrates with Dustgrain for easy data lookup straight from discord. -&amp;gt; Provides a functional base for future expansion if necessary.&#xA;/links https://github.com/cheiily/HeartBlazer /motivation HaB is the european community central for Granblue Fantasy Versus and GBVS: Rising (with sections for a few other games like GGXRD).</description>
    </item>
    <item>
      <title>inilib</title>
      <link>/projects/inilib/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/inilib/</guid>
      <description>/links https://github.com/cheiily/IniLib /motivation First real jab at a &amp;lsquo;personal project&amp;rsquo;, inspired by a uni task requiring us to parse data from a chosen text format. Also first time using a testing framework.&#xA;/technologies C++17 Boost Cmake /implementation The project uses an organized sample-based testing layout. The output structure is organized into a map-based section tree with string entries. Smart pointers are used to manage the memory and lifetimes of each tree node.</description>
    </item>
    <item>
      <title>Kosmische Kriege</title>
      <link>/projects/kosmische-kriege/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/kosmische-kriege/</guid>
      <description>/links https://cheily.itch.io/kosmischekriege /motivation Submission to a small, private, online gamejam, coined the &amp;lsquo;GameMakerJam&amp;rsquo;, mostly dedicated to getting a firmer grasp on the engine. We finished #1.&#xA;/technologies Gamemaker /implementation We decided to pick up an old idea of a multiplayer tanks-in-space genre game and our initial intent was to use the beta framework for rollback, provided by the engine &amp;amp; OperaGX servers. That unfortunately did not work out though, and the game ended up being local multiplayer for 2-4 players - although fully playable over input-sharing software such as Parsec.</description>
    </item>
    <item>
      <title>personal</title>
      <link>/personal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/personal/</guid>
      <description>&amp;#x2728; chiihou &amp;#x2728; &amp;#x2728;üåé blessing of the earth üåé&amp;#x2728; ~~~~~~~~~~~~~~~~~~~~~~~ Hi, I&amp;rsquo;m cheily.&#xA;I&amp;rsquo;m a ‚Ä¢ third-year üë®‚Äçüíªcompsciüëæ student in the game-dev specialization, ‚Ä¢ ü§ºfighting‚öîÔ∏ègameüïπÔ∏è enthusiast and TO for GBVS(R), ‚Ä¢ leisure üÄÖriichiüÄÑmahjongüÄÜ player, ‚Ä¢ ‚õ©Ô∏èanimangaüå∏ consumer, ‚Ä¢ üíø CD üìÄ collector &amp;amp; retroüìºtech enjoyer. Other than that my hobbies include gaming (gacha too - HSR, Resleriana), cycling and ground tennis.&#xA;I&amp;rsquo;ve been dabbling with programming since as far back as middle school and it&amp;rsquo;s been a hobby for a large part of my life, which then became my major and hopefully my job in the future :)</description>
    </item>
    <item>
      <title>scoreboard</title>
      <link>/projects/scoreboard/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/scoreboard/</guid>
      <description>Note: My focus was temporarily stolen away by DustGrain, but this should see some action in the coming months again.&#xA;GUI Application made with JavaFX. The application is a tool for Tournament Organizers to help manage streaming overlays for match scoreboards. Allows loading, selection, modification of relevant match data with output in the specified path. Allows loading and in-app edition of relevant player data, commentary data, round labeling, etc. Planned features for full release include web-overlays hosted locally, and data import from tournament management websites such as challonge.</description>
    </item>
    <item>
      <title>Scrub Squad</title>
      <link>/projects/scrub-squad/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/scrub-squad/</guid>
      <description>/links https://bubble-bliss-games.itch.io/scrub-squad /motivation This was the submission to the 2024 ZTGK contest in the Game Development category, which requries the games to be made on their own, dedicated engine. The contest was also required for us to submit to as part of our coursework. We qualifed as the finialists in the contest.&#xA;/technologies OpenGL Assimp ImGui (engine-only) Tracy profiler SDL (audio module only) /implementation As dictated by the course, our game ideas had to incorporate in them a couple of randomly selected topics.</description>
    </item>
    <item>
      <title>steamlog</title>
      <link>/projects/steamlog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/steamlog/</guid>
      <description>Background CLI application frequently polling the Steam API to create a local play history for further analysis. Built in Java.&#xA;/links https://github.com/cheiily/SteamLog_Puller /motivation Frustrated by the lack of any extensive history analysis tool for steam history, as steam only offers playtime and a monthly breakdown with the yearly summary, I decided to write a tool that could gather such info for myself.&#xA;/technologies Java 17 logback /implementation The project contains a couple of structures to represent the steam API response value and a connection(request) builder being ran in a looping thread.</description>
    </item>
    <item>
      <title>tab-ula-rasa</title>
      <link>/projects/tabularasa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>/projects/tabularasa/</guid>
      <description>/links https://armezdon.itch.io/tab-ula-rasa /motivation My first ever gamejam, as well as one of the first games I&amp;rsquo;ve made. We finished #1.&#xA;/technologies Gamemaker /implementation The jam&amp;rsquo;s topic was &amp;rsquo;tabula rasa&amp;rsquo;, which we decided to take quite literally and twist it into a pun of tab-ula-rasa. In the game you control a flying &amp;rsquo;tab&amp;rsquo; button and control bees flying between hives and flowers, creating honey for you. You need to be careful however, as each kind of bee is not very tolerant towards the others.</description>
    </item>
  </channel>
</rss>
